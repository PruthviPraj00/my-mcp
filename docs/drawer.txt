# Tailwind CSS Drawer (Offcanvas) - FlyonUI

h3:
  - FlyonUI

p:
  - overlays

p:
  - The Drawer component serves as a concealed off-canvas sidebar, ideal for navigation and displaying additional information with various styles and placements.

table:
| Class Name | Type | Description |
| --- | --- | --- |
| overlay | Component | Create an overlay initalize instance. |
| drawer | Component | Provides structure and styling for the modal component. |
| drawer-header | Part | Adds basic style drawer header. |
| drawer-title | Part | Adds basic style for drawer title. |
| drawer-body | Part | Adds basic style for drawer body. |
| drawer-footer | Part | Adds basic style for drawer footer. |
| overlay-open:{tw-utility-class} | Variant | Modifies tailwind classes when the overlay is open. |
| overlay-backdrop-open:{tw-utility-class} | Variant | Defines classes will be applied to backdrop when the overlay is open. |
| overlay-layout-open{tw-utility-class}: | Variant | Defines classes will be applied to any elements inside the body tag when the overlay is open. |
| drawer-start | Placement | Toggles drawer from start position. |
| drawer-end | Placement | Toggles drawer from end position. |
| drawer-top | Placement | Toggles drawer from top position. |
| drawer-bottom | Placement | Toggles drawer from bottom position. |

h2:
  - Default

h3:
  - Basic example

p:
  - Use theoverlayclass as the JavaScript target for addressing the overlay component, and utilize thedrawerclass for the drawer container. Use thedrawer-startresponsive class to toggle its position from the start. Apply the Tailwind CSShiddenclass to keep the drawer container hidden until it is opened.

p:
  - Add modifier classoverlay-open:with transform classtranslate-x-0to drawer container so that it shows drawer when opened.

p:
  - Assign the value of thedata-overlayattribute in any button to theidof the targeted overlay component, triggering the drawer to appear upon being clicked.

p:
  - The drawer structure consists of the component classdrawer, which serves as the container for the drawer content.

p:
  - This drawer is further styled using modifier classes such asdrawer-header,drawer-title,drawer-bodyanddrawer-footer, which collectively define the entire structure of the drawer.

p:
  - Utilize the provided example for default drawer component.

```html
<button aria-controls="overlay-example" aria-expanded="false" aria-haspopup="dialog" class="btn btn-primary" data-overlay="#overlay-example" type="button">
 Open drawer
</button>
<div class="overlay overlay-open:translate-x-0 drawer drawer-start hidden" id="overlay-example" role="dialog" tabindex="-1">
 <div class="drawer-header">
  <h3 class="drawer-title">
   Drawer Title
  </h3>
  <button aria-label="Close" class="btn btn-text btn-circle btn-sm absolute end-3 top-3" data-overlay="#overlay-example" type="button">
   <span class="icon-[tabler--x] size-5">
   </span>
  </button>
 </div>
 <div class="drawer-body">
  <p>
   Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.
  </p>
 </div>
 <div class="drawer-footer">
  <button class="btn btn-soft btn-secondary" data-overlay="#overlay-example" type="button">
   Close
  </button>
  <button class="btn btn-primary" type="button">
   Save changes
  </button>
 </div>
</div>

```
h2:
  - Placements

h3:
  - Positions

p:
  - Utilize the responsive classesdrawer-{position}to position the drawer in various positions, where{position}can be replaced withstart,top,end,middle-startorbottom.

p:
  - Refer to the provided examples for positioning the drawer at the default start position, as well as the end, top, or bottom positions.

```html
<button aria-controls="overlay-start-example" aria-expanded="false" aria-haspopup="dialog" class="btn btn-primary" data-overlay="#overlay-start-example" type="button">
 Toggle start
</button>
<div class="overlay overlay-open:translate-x-0 drawer drawer-start hidden" id="overlay-start-example" role="dialog" tabindex="-1">
 <div class="drawer-header">
  <h3 class="drawer-title">
   Drawer Title
  </h3>
  <button aria-label="Close" class="btn btn-text btn-circle btn-sm absolute end-3 top-3" data-overlay="#overlay-start-example" type="button">
   <span class="icon-[tabler--x] size-5">
   </span>
  </button>
 </div>
 <div class="drawer-body">
  <p>
   Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.
  </p>
 </div>
 <div class="drawer-footer">
  <button class="btn btn-soft btn-secondary" data-overlay="#overlay-start-example" type="button">
   Close
  </button>
  <button class="btn btn-primary" type="button">
   Save changes
  </button>
 </div>
</div>
<button aria-controls="overlay-end-example" aria-expanded="false" aria-haspopup="dialog" class="btn btn-primary" data-overlay="#overlay-end-example" type="button">
 Toggle end
</button>
<div class="overlay overlay-open:translate-x-0 drawer drawer-end hidden" id="overlay-end-example" role="dialog" tabindex="-1">
 <div class="drawer-header">
  <h3 class="drawer-title">
   Drawer Title
  </h3>
  <button aria-label="Close" class="btn btn-text btn-circle btn-sm absolute end-3 top-3" data-overlay="#overlay-end-example" type="button">
   <span class="icon-[tabler--x] size-5">
   </span>
  </button>
 </div>
 <div class="drawer-body">
  <p>
   Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.
  </p>
 </div>
 <div class="drawer-footer">
  <button class="btn btn-soft btn-secondary" data-overlay="#overlay-end-example" type="button">
   Close
  </button>
  <button class="btn btn-primary" type="button">
   Save changes
  </button>
 </div>
</div>
<button aria-controls="overlay-top-example" aria-expanded="false" aria-haspopup="dialog" class="btn btn-primary" data-overlay="#overlay-top-example" type="button">
 Toggle top
</button>
<div class="overlay drawer overlay-open:translate-y-0 drawer-top hidden" id="overlay-top-example" role="dialog" tabindex="-1">
 <div class="drawer-header">
  <h3 class="drawer-title">
   Drawer Title
  </h3>
  <button aria-label="Close" class="btn btn-text btn-circle btn-sm absolute end-3 top-3" data-overlay="#overlay-top-example" type="button">
   <span class="icon-[tabler--x] size-5">
   </span>
  </button>
 </div>
 <div class="drawer-body">
  <p>
   Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.
  </p>
 </div>
 <div class="drawer-footer">
  <button class="btn btn-soft btn-secondary" data-overlay="#overlay-top-example" type="button">
   Close
  </button>
  <button class="btn btn-primary" type="button">
   Save changes
  </button>
 </div>
</div>
<button aria-controls="overlay-bottom-example" aria-expanded="false" aria-haspopup="dialog" class="btn btn-primary" data-overlay="#overlay-bottom-example" type="button">
 Toggle bottom
</button>
<div class="overlay drawer overlay-open:translate-y-0 drawer-bottom hidden" id="overlay-bottom-example" role="dialog" tabindex="-1">
 <div class="drawer-header">
  <h3 class="drawer-title">
   Drawer Title
  </h3>
  <button aria-label="Close" class="btn btn-text btn-circle btn-sm absolute end-3 top-3" data-overlay="#overlay-bottom-example" type="button">
   <span class="icon-[tabler--x] size-5">
   </span>
  </button>
 </div>
 <div class="drawer-body">
  <p>
   Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.
  </p>
 </div>
 <div class="drawer-footer">
  <button class="btn btn-soft btn-secondary" data-overlay="#overlay-bottom-example" type="button">
   Close
  </button>
  <button class="btn btn-primary" type="button">
   Save changes
  </button>
 </div>
</div>

```
h2:
  - Illustrations

h3:
  - Responsive

p:
  - Use TailwindCSS classes forresponsive design, such assm:,md:,lg:,xl:, and2xl:, along with the responsive classdrawer-{position}to switch the drawer position at specific breakpoints.

p:
  - Utilize the provided example for a responsive drawer that moves to start position afterlg:breakpoint.

```html
<button aria-controls="overlay-responsive-example" aria-expanded="false" aria-haspopup="dialog" class="btn btn-primary" data-overlay="#overlay-responsive-example" type="button">
 Open drawer
</button>
<div class="overlay overlay-open:translate-x-0 drawer drawer-end lg:drawer-start hidden" id="overlay-responsive-example" role="dialog" tabindex="-1">
 <div class="drawer-header">
  <h3 class="drawer-title">
   Drawer Title
  </h3>
  <button aria-label="Close" class="btn btn-text btn-circle btn-sm absolute end-3 top-3" data-overlay="#overlay-responsive-example" type="button">
   <span class="icon-[tabler--x] size-5">
   </span>
  </button>
 </div>
 <div class="drawer-body">
  <p>
   Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.
  </p>
 </div>
 <div class="drawer-footer">
  <button class="btn btn-soft btn-secondary" data-overlay="#overlay-responsive-example" type="button">
   Close
  </button>
  <button class="btn btn-primary" type="button">
   Save changes
  </button>
 </div>
</div>

```
h3:
  - Drawer with form

p:
  - Utilize the provided example to implement drawer with form.

```html
<button aria-controls="overlay-form-example" aria-expanded="false" aria-haspopup="dialog" class="btn btn-primary" data-overlay="#overlay-form-example" type="button">
 Toggle form
</button>
<div class="overlay overlay-open:translate-x-0 drawer drawer-end hidden justify-start" id="overlay-form-example" role="dialog" tabindex="-1">
 <div class="drawer-header">
  <h3 class="drawer-title">
   Drawer Title
  </h3>
  <button aria-label="Close" class="btn btn-text btn-circle btn-sm absolute end-3 top-3" data-overlay="#overlay-form-example" type="button">
   <span class="icon-[tabler--x] size-5">
   </span>
  </button>
 </div>
 <form>
  <div class="drawer-body justify-start">
   <div class="mb-4">
    <label class="label-text" for="fullName">
     Full Name
    </label>
    <input class="input" id="fullName" placeholder="John Doe" type="text"/>
   </div>
   <div class="mb-4">
    <label class="label-text" for="email">
     Email
    </label>
    <input class="input" id="email" placeholder="john.doe@example.com" type="email"/>
   </div>
   <div class="mb-4">
    <label class="label-text" for="contact">
     Contact
    </label>
    <input class="input" id="contact" placeholder="+91 (106) 234-34-85" type="text"/>
   </div>
   <div class="mb-4">
    <label class="label-text" for="company">
     Company
    </label>
    <input class="input" id="company" placeholder="ABC Technologies Ltd" type="text"/>
   </div>
   <div class="mb-4">
    <label class="label-text" for="country">
     Country
    </label>
    <select class="select" id="country">
     <option disabled="" selected="">
      Select Country
     </option>
     <option>
      USA
     </option>
     <option>
      India
     </option>
     <option>
      Canada
     </option>
     <option>
      Japan
     </option>
     <option>
      Russia
     </option>
    </select>
   </div>
   <div class="mb-4">
    <label class="label-text" for="userRole">
     User Role
    </label>
    <select class="select" id="userRole">
     <option disabled="" selected="">
      Select Role
     </option>
     <option>
      Subscriber
     </option>
     <option>
      Maintainer
     </option>
     <option>
      Editor
     </option>
     <option>
      Author
     </option>
     <option>
      Admin
     </option>
    </select>
   </div>
   <div class="mb-0.5">
    <label class="label-text" for="selectPlan">
     Select Plan
    </label>
    <select class="select" id="selectPlan">
     <option disabled="" selected="">
      Select Plan
     </option>
     <option>
      Basic
     </option>
     <option>
      Enterprise
     </option>
     <option>
      Company
     </option>
     <option>
      Team
     </option>
    </select>
   </div>
  </div>
  <div class="drawer-footer">
   <button class="btn btn-soft btn-secondary" data-overlay="#overlay-form-example" type="button">
    Close
   </button>
   <button class="btn btn-primary" type="submit">
    Save changes
   </button>
  </div>
 </form>
</div>

```
h3:
  - Drawer with navigation

p:
  - Utilize the provided example to implement drawer with navigation. We have used collapse for collapsible item.

```html
<button aria-controls="overlay-navigation-example" aria-expanded="false" aria-haspopup="dialog" class="btn btn-primary" data-overlay="#overlay-navigation-example" type="button">
 Drawer with navigation
</button>
<aside class="overlay overlay-open:translate-x-0 drawer drawer-start hidden max-w-72" id="overlay-navigation-example" tabindex="-1">
 <div class="drawer-header">
  <h3 class="drawer-title">
   Menu
  </h3>
  <button aria-label="Close" class="btn btn-text btn-circle btn-sm absolute end-3 top-3" data-overlay="#overlay-navigation-example" type="button">
   <span class="icon-[tabler--x] size-4">
   </span>
  </button>
 </div>
 <div class="drawer-body justify-start pb-6">
  <ul class="menu space-y-0.5 p-0">
   <li>
    <a href="#">
     <span class="icon-[tabler--home] size-5">
     </span>
     Dashboard
    </a>
   </li>
   <li class="space-x-0.5">
    <a class="collapse-toggle collapse-open:bg-base-content/10" data-collapse="#layout-collapse-menu" id="layout-collapse">
     <span class="icon-[tabler--layout-navbar] size-5">
     </span>
     Layouts
     <span class="icon-[tabler--chevron-down] collapse-open:rotate-180 size-4">
     </span>
    </a>
    <ul aria-labelledby="layout-collapse" class="collapse hidden w-auto space-y-0.5 overflow-hidden transition-[height] duration-300" id="layout-collapse-menu">
     <li>
      <a href="#">
       <span class="icon-[tabler--point] size-5">
       </span>
       Content Navbar
      </a>
     </li>
     <li>
      <a href="#">
       <span class="icon-[tabler--point] size-5">
       </span>
       Horizontal
      </a>
     </li>
     <li>
      <a href="#">
       <span class="icon-[tabler--point] size-5">
       </span>
       Without Menu
      </a>
     </li>
    </ul>
   </li>
   <li class="space-y-0.5">
    <a class="collapse-toggle collapse-open:bg-base-content/10" data-collapse="#front-page-collapse-menu" id="front-page-collapse">
     <span class="icon-[tabler--box-multiple] size-5">
     </span>
     Front Pages
     <span class="icon-[tabler--chevron-down] collapse-open:rotate-180 size-4">
     </span>
    </a>
    <ul aria-labelledby="front-page-collapse" class="collapse hidden w-auto space-y-0.5 overflow-hidden transition-[height] duration-300" id="front-page-collapse-menu">
     <li>
      <a href="#">
       <span class="icon-[tabler--point] size-5">
       </span>
       Landing Page
      </a>
     </li>
     <li>
      <a href="#">
       <span class="icon-[tabler--point] size-5">
       </span>
       Pricing Page
      </a>
     </li>
     <li>
      <a href="#">
       <span class="icon-[tabler--point] size-5">
       </span>
       Checkout Page
      </a>
     </li>
    </ul>
   </li>
   <div class="divider text-base-content/50 py-6 after:border-0">
    Apps & Pages
   </div>
   <li>
    <a href="#">
     <span class="icon-[tabler--message-chatbot] size-5">
     </span>
     Chat
    </a>
   </li>
   <li>
    <a href="#">
     <span class="icon-[tabler--mail] size-5">
     </span>
     Email
    </a>
   </li>
   <li>
    <a href="#">
     <span class="icon-[tabler--calendar] size-5">
     </span>
     Calendar
    </a>
   </li>
   <li class="space-x-0.5">
    <a class="collapse-toggle collapse-open:bg-base-content/10" data-collapse="#ecommerce-collapse-menu" id="ecommerce-collapse">
     <span class="icon-[tabler--shopping-cart] size-5">
     </span>
     Ecommerce
     <span class="icon-[tabler--chevron-down] collapse-open:rotate-180 size-4">
     </span>
    </a>
    <ul aria-labelledby="ecommerce-collapse" class="collapse hidden w-auto space-y-0.5 overflow-hidden transition-[height] duration-300" id="ecommerce-collapse-menu">
     <li>
      <a href="#">
       <span class="icon-[tabler--point] size-5">
       </span>
       Products
      </a>
     </li>
     <li>
      <a href="#">
       <span class="icon-[tabler--point] size-5">
       </span>
       Categories
      </a>
     </li>
     <li>
      <a href="#">
       <span class="icon-[tabler--point] size-5">
       </span>
       Shipping & Delivery
      </a>
     </li>
     <li>
      <a href="#">
       <span class="icon-[tabler--point] size-5">
       </span>
       Location
      </a>
     </li>
    </ul>
   </li>
   <div class="divider text-base-content/50 py-6 after:border-0">
    Account
   </div>
   <li>
    <a href="#">
     <span class="icon-[tabler--login] size-5">
     </span>
     Sign In
    </a>
   </li>
   <li>
    <a href="#">
     <span class="icon-[tabler--logout-2] size-5">
     </span>
     Sign Out
    </a>
   </li>
   <div class="divider text-base-content/50 py-6 after:border-0">
    Miscellaneous
   </div>
   <li>
    <a href="#">
     <span class="icon-[tabler--users-group] size-5">
     </span>
     Support
    </a>
   </li>
   <li>
    <a href="#">
     <span class="icon-[tabler--files] size-5">
     </span>
     Documentation
    </a>
   </li>
  </ul>
 </div>
</aside>

```
h2:
  - Options usage

h3:
  - Bodyscroll without backdrop

p:
  - Utilize the[--body-scroll:{boolean}]option to control the scrolling behavior of the layout beneath the overlay component. When set totrue, it enables scrolling of the body, whereas when set tofalse, it disables body scrolling. By default, its value isfalse.

p:
  - Set the[--overlay-backdrop:{string}]option, where{string}can bestatic,nullorfalse. When set tofalseit creates drawer without backdrop. By default, its value isnull.

p:
  - Review the provided example for a drawer with body scroll enabled and without a backdrop.

```html
<button aria-controls="overlay-body-scrolling" aria-expanded="false" aria-haspopup="dialog" class="btn btn-primary" data-overlay="#overlay-body-scrolling" type="button">
 Body scrolling (no backdrop)
</button>
<div class="overlay overlay-open:translate-x-0 drawer drawer-start hidden [--body-scroll:true] [--overlay-backdrop:false]" id="overlay-body-scrolling" role="dialog" tabindex="-1">
 <div class="drawer-header">
  <h3 class="drawer-title">
   Drawer Title
  </h3>
  <button aria-label="Close" class="btn btn-text btn-circle btn-sm absolute end-3 top-3" data-overlay="#overlay-body-scrolling" type="button">
   <span class="icon-[tabler--x] size-5">
   </span>
  </button>
 </div>
 <div class="drawer-body">
  <p>
   Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.
  </p>
 </div>
 <div class="drawer-footer">
  <button class="btn btn-soft btn-secondary" data-overlay="#overlay-body-scrolling" type="button">
   Close
  </button>
  <button class="btn btn-primary" type="button">
   Save changes
  </button>
 </div>
</div>

```
h3:
  - Bodyscroll with backdrop

p:
  - Review the provided example for a drawer with body scroll enabled and with a backdrop.

```html
<button aria-controls="overlay-body-scrolling-with-backdrop" aria-expanded="false" aria-haspopup="dialog" class="btn btn-primary" data-overlay="#overlay-body-scrolling-with-backdrop" type="button">
 Body scrolling (with backdrop)
</button>
<div class="overlay overlay-open:translate-x-0 drawer drawer-start hidden [--body-scroll:true]" id="overlay-body-scrolling-with-backdrop" role="dialog" tabindex="-1">
 <div class="drawer-header">
  <h3 class="drawer-title">
   Drawer Title
  </h3>
  <button aria-label="Close" class="btn btn-text btn-circle btn-sm absolute end-3 top-3" data-overlay="#overlay-body-scrolling-with-backdrop" type="button">
   <span class="icon-[tabler--x] size-5">
   </span>
  </button>
 </div>
 <div class="drawer-body">
  <p>
   Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.
  </p>
 </div>
 <div class="drawer-footer">
  <button class="btn btn-soft btn-secondary" data-overlay="#overlay-body-scrolling-with-backdrop" type="button">
   Close
  </button>
  <button class="btn btn-primary" type="button">
   Save changes
  </button>
 </div>
</div>

```
h3:
  - Backdrop without bodyscroll

p:
  - Review the provided example for a drawer with body scroll disabled and with a backdrop.

```html
<button aria-controls="overlay-backdrop-without-body-scrolling" aria-expanded="false" aria-haspopup="dialog" class="btn btn-primary" data-overlay="#overlay-backdrop-without-body-scrolling" type="button">
 Backdrop (without bodyscroll)
</button>
<div class="overlay overlay-open:translate-x-0 drawer drawer-start hidden" id="overlay-backdrop-without-body-scrolling" role="dialog" tabindex="-1">
 <div class="drawer-header">
  <h3 class="drawer-title">
   Drawer Title
  </h3>
  <button aria-label="Close" class="btn btn-text btn-circle btn-sm absolute end-3 top-3" data-overlay="#overlay-backdrop-without-body-scrolling" type="button">
   <span class="icon-[tabler--x] size-5">
   </span>
  </button>
 </div>
 <div class="drawer-body">
  <p>
   Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.
  </p>
 </div>
 <div class="drawer-footer">
  <button class="btn btn-soft btn-secondary" data-overlay="#overlay-backdrop-without-body-scrolling" type="button">
   Close
  </button>
  <button class="btn btn-primary" type="button">
   Save changes
  </button>
 </div>
</div>

```
h3:
  - Custom backdrop color

p:
  - For customizing the backdrop, there are two methods available:

p:
  - The first method involves using the backdrop modifier classoverlay-backdrop-open:{custom-color}, where you can specify any color for the backdrop.

p:
  - The second method entails assigning an object value to thedata-overlay-optionsattribute in the trigger button. Within this object, set thebackdropClasseskey totransition duration-300 fixed inset-0 bg-success/70 overlay-backdropto replace the existing backdrop classes with these customized ones.

p:
  - Examine the provided examples demonstrating both methods for setting the custom backdrop in drawer.

```html
<button aria-controls="overlay-custom-backdrop" aria-expanded="false" aria-haspopup="dialog" class="btn btn-primary" data-overlay="#overlay-custom-backdrop" type="button">
 Open drawer
</button>
<div class="overlay overlay-open:translate-x-0 drawer drawer-start overlay-backdrop-open:bg-warning/40 hidden" id="overlay-custom-backdrop" role="dialog" tabindex="-1">
 <div class="drawer-header">
  <h3 class="drawer-title">
   Drawer Title
  </h3>
  <button aria-label="Close" class="btn btn-text btn-circle btn-sm absolute end-3 top-3" data-overlay="#overlay-custom-backdrop" type="button">
   <span class="icon-[tabler--x] size-5">
   </span>
  </button>
 </div>
 <div class="drawer-body">
  <p>
   Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.
  </p>
 </div>
 <div class="drawer-footer">
  <button class="btn btn-soft btn-secondary" data-overlay="#overlay-custom-backdrop" type="button">
   Close
  </button>
  <button class="btn btn-primary" type="button">
   Save changes
  </button>
 </div>
</div>
<button aria-controls="overlay-custom-backdrop-2" aria-expanded="false" aria-haspopup="dialog" class="btn btn-primary" data-overlay="#overlay-custom-backdrop-2" data-overlay-options='{ "backdropClasses": "transition duration-300 fixed inset-0 bg-accent/40 overlay-backdrop" }' type="button">
 Open drawer
</button>
<div class="overlay overlay-open:translate-x-0 drawer drawer-start hidden" id="overlay-custom-backdrop-2" role="dialog" tabindex="-1">
 <div class="drawer-header">
  <h3 class="drawer-title">
   Drawer Title
  </h3>
  <button aria-label="Close" class="btn btn-text btn-circle btn-sm absolute end-3 top-3" data-overlay="#overlay-custom-backdrop-2" type="button">
   <span class="icon-[tabler--x] size-5">
   </span>
  </button>
 </div>
 <div class="drawer-body">
  <p>
   Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.
  </p>
 </div>
 <div class="drawer-footer">
  <button class="btn btn-soft btn-secondary" data-overlay="#overlay-custom-backdrop-2" type="button">
   Close
  </button>
  <button class="btn btn-primary" type="button">
   Save changes
  </button>
 </div>
</div>

```
h3:
  - Scoped based drawer

p:
  - This example showcase usage of:backdropParent.

h2:
  - JavaScript behavior

h2:
  - Drawer (Offcanvas)

h3:
  - On this page

h2:
  - Drawer (Offcanvas)

p:
  - FlyonUI is an open-sourceTailwind CSS components librarywith UI examples, blocks, templates, plugins, and a Figma design system.

h3:
  - Innovative Offerings

p:
  - Discover other Tools & Brands in our Ecosystem

p:
  - Building in public by@Ajay Patel, designed by@Anand Patel
