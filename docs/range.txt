# Tailwind CSS Range - FlyonUI

h3:
  - FlyonUI

p:
  - forms

p:
  - A range slider is used to modify a value by sliding a handle along a track, allowing for precise adjustments.

table:
| Class Name | Type | Description |
| --- | --- | --- |
| range | Component | Range input |
| range-primary | Color | Adds ‘primary’ to range |
| range-secondary | Color | Adds ‘secondary’ to range |
| range-accent | Color | Adds ‘accent’ to range |
| range-info | Color | Adds ‘info’ to range |
| range-success | Color | Adds ‘success’ to range |
| range-warning | Color | Adds ‘warning’ to range |
| range-error | Color | Adds ’error’ to range |
| range-xs | Size | Extra small range |
| range-sm | Size | Small range |
| range-md | Size | Medium (Default) range |
| range-lg | Size | Large range |
| range-xl | Size | Extra Large range |

h2:
  - Basic example

h3:
  - Default

p:
  - Basic inputrangeexample.

```html
<input aria-label="range" class="range" type="range"/>

```
h2:
  - Size

h3:
  - Range sizes

p:
  - The Range inputs are stacked in three sizes:extra smallxs, smallsm, default, and largelg.

```html
<input aria-label="range" class="range range-xs" type="range"/>
<input aria-label="range" class="range range-sm" type="range"/>
<input aria-label="range" class="range" type="range"/>
<input aria-label="range" class="range range-lg" type="range"/>
<input aria-label="range" class="range range-xl" type="range"/>

```
h2:
  - Color

h3:
  - Semantic colors

p:
  - The standard format for range is accompanied by the component classrangeand modifier classrange-{semantic-color}.

```html
<input aria-label="range" class="range" type="range"/>
<input aria-label="primary range" class="range range-primary" type="range"/>
<input aria-label="secondary range" class="range range-secondary" type="range"/>
<input aria-label="info range" class="range range-info" type="range"/>
<input aria-label="success range" class="range range-success" type="range"/>
<input aria-label="warning range" class="range range-warning" type="range"/>
<input aria-label="error range" class="range range-error" type="range"/>

```
h3:
  - Custom color

p:
  - Utilize[--range-color:]to incorporate your custom color.

```html
<input aria-label="custom range" class="range [--range-color:teal]" type="range"/>

```
h2:
  - Illustrations

h3:
  - Disabled

p:
  - Apply thedisabledboolean attribute to a range input to disable pointer events and prevent focusing.

```html
<input aria-label="disabled range" class="range" disabled="" type="range"/>

```
h3:
  - Min and max

p:
  - Range inputs inherently have default values forminandmax- 0 and 100, respectively. You can customize these values using theminandmaxattributes.

```html
<input aria-label="range" class="range" max="100" min="0" type="range" value="40"/>

```
h3:
  - Steps

p:
  - Thestepattribute specifies the interval between legal numbers in an<input>element.

```html
<input aria-label="range" class="range" max="100" min="0" step="25" type="range" value="25"/>
<div class="w-full flex justify-between text-xs px-2">
 <span>
  |
 </span>
 <span>
  |
 </span>
 <span>
  |
 </span>
 <span>
  |
 </span>
 <span>
  |
 </span>
</div>

```
h2:
  - Range

h3:
  - On this page

h2:
  - Range

p:
  - FlyonUI is an open-sourceTailwind CSS components librarywith UI examples, blocks, templates, plugins, and a Figma design system.

h3:
  - Innovative Offerings

p:
  - Discover other Tools & Brands in our Ecosystem

p:
  - Building in public by@Ajay Patel, designed by@Anand Patel
