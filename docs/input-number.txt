# Tailwind CSS Input Number - FlyonUI

h3:
  - FlyonUI

p:
  - advanced forms

p:
  - The Input Number, or Quantity Selector, lets users specify quantities easily, making it ideal for selecting product amounts or seats with simple controls.

table:
| Class Name | Type | Description |
| --- | --- | --- |
| input | Component | Basic input field. |
| is-valid | State | Adds success style to the input. |
| is-invalid | State | Adds error style to the input. |
| input-number-disabled:{tw-utility-class} | Variant | The modifier allows setting Tailwind classes when input’s value is set to zero. |

h2:
  - Basic example

h3:
  - Default

p:
  - Basic example of input number.

p:
  - Enclose thedata-input-number-inputanddata-input-number-decrementelements of the input-number withindata-input-number-incrementwithindata-input-number.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="input max-w-sm" data-input-number="">
   <input aria-label="Input number" data-input-number-input="" type="text" value="1"/>
   <span class="my-auto flex gap-3">
    <button aria-label="Decrement button" class="btn btn-primary btn-soft size-5.5 min-h-0 rounded-sm p-0" data-input-number-decrement="" type="button">
     <span class="icon-[tabler--minus] size-3.5 shrink-0">
     </span>
    </button>
    <button aria-label="Increment button" class="btn btn-primary btn-soft size-5.5 min-h-0 rounded-sm p-0" data-input-number-increment="" type="button">
     <span class="icon-[tabler--plus] size-3.5 shrink-0">
     </span>
    </button>
   </span>
  </div>
 </div>
</div>

h3:
  - Label

p:
  - Input number with label.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose !block flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="max-w-sm" data-input-number="">
   <label class="label-text" for="number-input-label">
    Quantity:
   </label>
   <div class="input">
    <input aria-label="Label input number" data-input-number-input="" id="number-input-label" type="text" value="1"/>
    <span class="my-auto flex gap-3">
     <button aria-label="Decrement button" class="btn btn-primary btn-soft size-5.5 min-h-0 rounded-sm p-0" data-input-number-decrement="" type="button">
      <span class="icon-[tabler--minus] size-3.5 shrink-0">
      </span>
     </button>
     <button aria-label="Increment button" class="btn btn-primary btn-soft size-5.5 min-h-0 rounded-sm p-0" data-input-number-increment="" type="button">
      <span class="icon-[tabler--plus] size-3.5 shrink-0">
      </span>
     </button>
    </span>
   </div>
  </div>
 </div>
</div>

h2:
  - Validation states

h3:
  - Success state

p:
  - Success state can be show usingis-validclass.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="input max-w-sm" data-input-number="">
   <input aria-label="success state" class="is-valid" data-input-number-input="" type="text" value="1"/>
   <span class="my-auto flex gap-3">
    <button aria-label="Decrement button" class="btn btn-primary btn-soft size-5.5 min-h-0 rounded-sm p-0" data-input-number-decrement="" type="button">
     <span class="icon-[tabler--minus] size-3.5 shrink-0">
     </span>
    </button>
    <button aria-label="Increment button" class="btn btn-primary btn-soft size-5.5 min-h-0 rounded-sm p-0" data-input-number-increment="" type="button">
     <span class="icon-[tabler--plus] size-3.5 shrink-0">
     </span>
    </button>
   </span>
  </div>
 </div>
</div>

h3:
  - Error state

p:
  - Error state can be show usingis-invalidclass.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="input max-w-sm" data-input-number="">
   <input aria-label="error state" class="is-invalid" data-input-number-input="" type="text" value="1"/>
   <span class="my-auto flex gap-3">
    <button aria-label="Decrement button" class="btn btn-primary btn-soft size-5.5 min-h-0 rounded-sm p-0" data-input-number-decrement="" type="button">
     <span class="icon-[tabler--minus] size-3.5 shrink-0">
     </span>
    </button>
    <button aria-label="Increment button" class="btn btn-primary btn-soft size-5.5 min-h-0 rounded-sm p-0" data-input-number-increment="" type="button">
     <span class="icon-[tabler--plus] size-3.5 shrink-0">
     </span>
    </button>
   </span>
  </div>
 </div>
</div>

h2:
  - Illustrations

h3:
  - Disabled

p:
  - Basic disabled state.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="input max-w-sm" data-input-number="">
   <input aria-label="Disable input number" data-input-number-input="" disabled="" type="text" value="1"/>
   <span class="my-auto flex gap-3">
    <button aria-label="Decrement button" class="btn btn-primary btn-soft size-5.5 min-h-0 rounded-sm p-0" data-input-number-decrement="" type="button">
     <span class="icon-[tabler--minus] size-3.5 shrink-0">
     </span>
    </button>
    <button aria-label="Increment button" class="btn btn-primary btn-soft size-5.5 min-h-0 rounded-sm p-0" data-input-number-increment="" type="button">
     <span class="icon-[tabler--plus] size-3.5 shrink-0">
     </span>
    </button>
   </span>
  </div>
 </div>
</div>

h3:
  - Vertically stacked buttons

p:
  - Vertically stacked buttons example.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose !block flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="max-w-sm" data-input-number="">
   <label class="label-text" for="number-input-vertically">
    Quantity:
   </label>
   <div class="input pe-0">
    <input aria-label="Vertical stacked buttons" data-input-number-input="" id="number-input-vertically" type="text" value="0"/>
    <span class="divide-base-content/25 border-base-content/25 my-auto flex flex-col divide-y border-s">
     <button aria-label="Increment button" class="flex size-4.5 items-center justify-center" data-input-number-decrement="" type="button">
      <span class="icon-[tabler--minus] size-3.5 shrink-0">
      </span>
     </button>
     <button aria-label="Decrement button" class="flex size-4.5 items-center justify-center" data-input-number-increment="" type="button">
      <span class="icon-[tabler--plus] size-3.5 shrink-0">
      </span>
     </button>
    </span>
   </div>
  </div>
 </div>
</div>

h3:
  - Horizontally stacked buttons

p:
  - Horizontally stacked buttons example.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose !block flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="max-w-sm" data-input-number="">
   <label class="label-text" for="number-input-horizontally">
    Quantity:
   </label>
   <div class="input pe-0">
    <input aria-label="Horizontal stacked buttons" data-input-number-input="" id="number-input-horizontally" type="text" value="0"/>
    <span class="divide-base-content/25 border-base-content/25 flex items-center divide-x border-s">
     <button aria-label="Increment button" class="flex size-9.5 items-center justify-center" data-input-number-decrement="" type="button">
      <span class="icon-[tabler--minus] size-3.5 shrink-0">
      </span>
     </button>
     <button aria-label="Decrement button" class="flex size-9.5 items-center justify-center" data-input-number-increment="" type="button">
      <span class="icon-[tabler--plus] size-3.5 shrink-0">
      </span>
     </button>
    </span>
   </div>
  </div>
 </div>
</div>

h3:
  - Horizontally stretched buttons.

p:
  - Horizontally stretched buttons example.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose !block flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="max-w-sm" data-input-number="">
   <label class="label-text" for="number-input-stretched">
    Quantity:
   </label>
   <div class="input px-0">
    <span class="border-base-content/25 border-e ps-0">
     <button aria-label="Decrement button" class="flex size-9.5 items-center justify-center" data-input-number-decrement="" type="button">
      <span class="icon-[tabler--minus] size-3.5 shrink-0">
      </span>
     </button>
    </span>
    <input aria-label="Stretched stacked buttons" class="px-3" data-input-number-input="" id="number-input-stretched" type="text" value="0"/>
    <span class="border-base-content/25 border-s pe-0">
     <button aria-label="Increment button" class="flex size-9.5 items-center justify-center" data-input-number-increment="" type="button">
      <span class="icon-[tabler--plus] size-3.5 shrink-0">
      </span>
     </button>
    </span>
   </div>
  </div>
 </div>
</div>

h3:
  - Mini

p:
  - Here’s a simple example: demonstrate setting a maximum width for the main container.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose !block flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="max-w-32" data-input-number="">
   <label class="label-text" for="number-input-mini">
    Quantity:
   </label>
   <div class="input items-center">
    <button aria-label="Decrement button" class="btn btn-primary btn-soft size-5.5 min-h-0 rounded-sm p-0" data-input-number-decrement="" type="button">
     <span class="icon-[tabler--minus] size-3.5 shrink-0">
     </span>
    </button>
    <input aria-label="Mini stacked buttons" class="text-center" data-input-number-input="" id="number-input-mini" type="text" value="0"/>
    <button aria-label="Increment button" class="btn btn-primary btn-soft size-5.5 min-h-0 rounded-sm p-0" data-input-number-increment="" type="button">
     <span class="icon-[tabler--plus] size-3.5 shrink-0">
     </span>
    </button>
   </div>
  </div>
 </div>
</div>

h3:
  - Booking

p:
  - Here’s an example of a movie ticket booking number counter.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex-col gap-6 flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="input input-lg relative max-w-sm px-0" data-input-number="">
   <span class="border-base-content/25 border-e ps-0">
    <button aria-label="Decrement button" class="flex size-11.5 items-center justify-center" data-input-number-decrement="" type="button">
     <span class="icon-[tabler--minus] size-3.5 shrink-0">
     </span>
    </button>
   </span>
   <input aria-label="seat counter" class="pb-2 text-center" data-input-number-input="" id="number-input-booking" type="text" value="0"/>
   <div class="absolute start-1/2 bottom-0.5 flex -translate-x-1/2 items-center rtl:translate-x-1/2">
    <span class="icon-[tabler--ticket] text-base-content/80 me-2 size-4">
    </span>
    <span class="text-base-content/80 text-xs text-nowrap">
     Number of seat
    </span>
   </div>
   <span class="border-base-content/25 border-s pe-0">
    <button aria-label="Increment button" class="flex size-11.5 items-center justify-center" data-input-number-increment="" type="button">
     <span class="icon-[tabler--plus] size-3.5 shrink-0">
     </span>
    </button>
   </span>
  </div>
  <div class="input input-lg relative max-w-sm px-0" data-input-number="">
   <span class="border-base-content/25 border-e ps-0">
    <button aria-label="Decrement button" class="flex size-11.5 items-center justify-center" data-input-number-decrement="" type="button">
     <span class="icon-[tabler--minus] size-3.5 shrink-0">
     </span>
    </button>
   </span>
   <input aria-label="Bucket counter" class="pb-2 text-center" data-input-number-input="" id="number-input-booking" type="text" value="0"/>
   <div class="absolute start-1/2 bottom-0.5 flex -translate-x-1/2 items-center rtl:translate-x-1/2">
    <span class="icon-[tabler--brand-bitbucket] text-base-content/80 me-2 size-4">
    </span>
    <span class="text-base-content/80 text-xs text-nowrap">
     Number of Bucket
    </span>
   </div>
   <span class="border-base-content/25 border-s pe-0">
    <button aria-label="Increment button" class="flex size-11.5 items-center justify-center" data-input-number-increment="" type="button">
     <span class="icon-[tabler--plus] size-3.5 shrink-0">
     </span>
    </button>
   </span>
  </div>
 </div>
</div>

h3:
  - Step controls

p:
  - Increase or decrease values in steps. This example uses a":step"value of5.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="input max-w-sm" data-input-number='{ "step": 5 }'>
   <input aria-label="Step control" data-input-number-input="" type="text" value="0"/>
   <span class="my-auto flex gap-3">
    <button aria-label="Decrement button" class="btn btn-primary btn-soft size-5.5 min-h-0 rounded-sm p-0" data-input-number-decrement="" type="button">
     <span class="icon-[tabler--minus] size-3.5 shrink-0">
     </span>
    </button>
    <button aria-label="Increment button" class="btn btn-primary btn-soft size-5.5 min-h-0 rounded-sm p-0" data-input-number-increment="" type="button">
     <span class="icon-[tabler--plus] size-3.5 shrink-0">
     </span>
    </button>
   </span>
  </div>
 </div>
</div>

h3:
  - Min/Max value

p:
  - You can control the minimum value with":min"and set the maximum value with":max".

p:
  - In the example below, the maximum number that can be selected is15.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="input max-w-sm" data-input-number='{ "max": 15 }'>
   <input aria-label="Maximum value input" data-input-number-input="" type="text" value="1"/>
   <span class="my-auto flex gap-3">
    <button aria-label="Decrement button" class="btn btn-primary btn-soft size-5.5 min-h-0 rounded-sm p-0" data-input-number-decrement="" type="button">
     <span class="icon-[tabler--minus] size-3.5 shrink-0">
     </span>
    </button>
    <button aria-label="Increment button" class="btn btn-primary btn-soft size-5.5 min-h-0 rounded-sm p-0" data-input-number-increment="" type="button">
     <span class="icon-[tabler--plus] size-3.5 shrink-0">
     </span>
    </button>
   </span>
  </div>
 </div>
</div>

p:
  - In the example below, the minimum number that can be selected is-15.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="input max-w-sm" data-input-number='{ "min": -15 }'>
   <input aria-label="Minimum value input" data-input-number-input="" type="text" value="0"/>
   <span class="my-auto flex gap-3">
    <button aria-label="Decrement button" class="btn btn-primary btn-soft size-5.5 min-h-0 rounded-sm p-0" data-input-number-decrement="" type="button">
     <span class="icon-[tabler--minus] size-3.5 shrink-0">
     </span>
    </button>
    <button aria-label="Increment button" class="btn btn-primary btn-soft size-5.5 min-h-0 rounded-sm p-0" data-input-number-increment="" type="button">
     <span class="icon-[tabler--plus] size-3.5 shrink-0">
     </span>
    </button>
   </span>
  </div>
 </div>
</div>

p:
  - Destroy/ReinitializeThedestroymethodis provided to facilitate the destruction of a input number.

h3:
  - Destroy/Reinitialize

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose !block flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="input max-w-sm" data-input-number="" id="input-number-to-destroy">
   <input aria-label="Input number destroy" data-input-number-input="" type="text" value="1"/>
   <span class="my-auto flex gap-3">
    <button aria-label="Decrement button" class="btn btn-primary btn-soft size-5.5 min-h-0 rounded-sm p-0" data-input-number-decrement="" type="button">
     <span class="icon-[tabler--minus] size-3.5 shrink-0">
     </span>
    </button>
    <button aria-label="Increment button" class="btn btn-primary btn-soft size-5.5 min-h-0 rounded-sm p-0" data-input-number-increment="" type="button">
     <span class="icon-[tabler--plus] size-3.5 shrink-0">
     </span>
    </button>
   </span>
  </div>
  <div class="mt-4 flex gap-3">
   <button class="btn btn-primary" id="destroy-btn">
    Destroy
   </button>
   <button class="btn btn-primary" disabled="" id="reinit-btn">
    Reinitialize
   </button>
  </div>
 </div>
</div>

h2:
  - JavaScript behavior

h3:
  - Options

table:
| PARAMETERS | DESCRIPTION | OPTIONS | DEFAULT VALUE |
| --- | --- | --- | --- |
| data-input-number | Activate an Input Number by specifying on an element. | - | - |
| data-input-number-input | Applied to the input element. | - | - |
| data-input-number-increment | Applied to the increment button. | - | - |
| data-input-number-decrement | Applied to the decrement button. | - | - |
| :step | Determines the step by which the value will increase or decrease. | number | 1 |
| :min | Defines the minimum value that can be entered. Setting it to-Infinityallows unrestricted negative values. | number /“-Infinity” | 0 |
| :max | max Defines the maximum possible value. | number / null | null |

h3:
  - Methods

p:
  - TheHSInputNumberobject is contained within the globalwindowobject.

table:
| METHOD | DESCRIPTION |
| --- | --- |
| PUBLIC METHODS |
| destroy() | Destroys the instance, removes generated markup (if any), removes added classes and attributes. |
| STATIC METHODS |
| HSInputNumber.getInstance(target, isInstance) | Returns the element associated to thetarget.targetshould be a Node or string (valid selector).isInstanceboolean. Returns the instance instead of Node iftrue. |

p:
  - Destroy instance.

h3:
  - Events

table:
| METHOD | DESCRIPTION | RETURNING VALUE |
| --- | --- | --- |
| on:change | Called when input value is changed. | Current value. |

p:
  - Assign an ID to thedata-input-numberin the events. Increment the number and check the output in the console.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose justify-between flex-wrap flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="input max-w-sm" data-input-number="" id="input-number">
   <input aria-label="Number input" data-input-number-input="" type="text" value="1"/>
   <span class="my-auto flex gap-3">
    <button aria-label="Decrement button" class="btn btn-primary btn-soft size-5.5 min-h-0 rounded-sm p-0" data-input-number-decrement="" type="button">
     <span class="icon-[tabler--minus] size-3.5 shrink-0">
     </span>
    </button>
    <button aria-label="Increment button" class="btn btn-primary btn-soft size-5.5 min-h-0 rounded-sm p-0" data-input-number-increment="" type="button">
     <span class="icon-[tabler--plus] size-3.5 shrink-0">
     </span>
    </button>
   </span>
  </div>
 </div>
</div>

p:
  - Open any accordion event example.

h2:
  - Input Number

h3:
  - On this page

h2:
  - Input Number

p:
  - FlyonUI is an open-sourceTailwind CSS components librarywith UI examples, blocks, templates, plugins, and a Figma design system.

h3:
  - Innovative Offerings

p:
  - Discover other Tools & Brands in our Ecosystem

p:
  - Building in public by@Ajay Patel, designed by@Anand Patel
