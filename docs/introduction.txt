# Introduction - FlyonUI

h3:
  - FlyonUI

p:
  - getting-started

p:
  - The easiest, free and open-source Tailwind CSS component library with semantic classes. ð

h2:
  - What is FlyonUI?

p:
  - FlyonUI is designed to combine the best of both worlds: the aesthetic appeal ofsemantic classesand the powerful functionality ofJS plugins.

p:
  - Under the hood, it uses the strengths of:

h2:
  - Why should I use FlyonUI?

p:
  - Using Tailwind CSS alone may lead to cluttered HTML with numerous utility classes, which can be a nightmare to maintain.

p:
  - Apart from that Tailwind CSS or daisyUI doesn’t provide any interactive headless JavaScript components like accordion, overlay, dropdowns, etc…

p:
  - This is where FlyonUI shines.â¨

p:
  - FlyonUI brings together the beauty ofsemantic classesand the interactiveheadless JavaScript plugins, offering you a powerful toolkit to build stunning, interactive user interfaces with ease.

p:
  - Features of FlyonUI:

p:
  - FlyonUI might not be the right fit for you if you:

p:
  - How does FlyonUI function?FlyonUI is an NPM package that seamlessly integrates into your project as a dev dependency.

h2:
  - How does FlyonUI function?

p:
  - By adding it to your Tailwind CSS configuration as a plugin, you instantly gain access to FlyonUI’s class names, which work just like any other Tailwind CSS utilityâready to use.

p:
  - Why do we need another component library on top of daisyUI?Here are some key points addressing the need for another component library on top of daisyUI, likeFlyonUI:

h2:
  - Why do we need another component library on top of daisyUI?

p:
  - Does FlyonUI stay true to Tailwind CSS' utility-first approach?Absolutely! FlyonUI is designed to work seamlessly with Tailwind CSS while balancing both flexibility and speed. Tailwind’s utility-first approach offers unmatched customization, but can sometimes lead to slower development and more verbose code.

h2:
  - Does FlyonUI stay true to Tailwind CSS' utility-first approach?

p:
  - FlyonUI bridges this gap by providing ready-made, customizable components that speed up development without sacrificing control over design. You can quickly implement components for faster UI creation, while still using Tailwind CSS utilities for fine-tuning and personalizing every detail when neededâdelivering the perfect balance of efficiency and flexibility.

p:
  - Is FlyonUI really free to use?Yes, FlyonUI is completely free and open-source, released under the MIT license.

h2:
  - Is FlyonUI really free to use?

p:
  - Youâre welcome to use it in any project, whether itâs for personal, commercial, or open-source purposes, with no hidden fees or limitations.

p:
  - How can you contribute and support the growth of FlyonUI?Supporting FlyonUI is simple and meaningful! You can contribute in several ways:

h2:
  - How can you contribute and support the growth of FlyonUI?

p:
  - By supporting FlyonUI, youâre contributing to a tool thatâs designed to make web development easier and faster for everyoneâyour involvement helps shape its future!

p:
  - Can FlyonUI be integrated with other UI frameworks seamlessly?While FlyonUI is designed to work seamlessly with Tailwind CSS, its flexible, utility-based components can be adapted for use with other UI frameworks. Whether you’re working with React, Vue, or Angular, you can leverage FlyonUI’s components and plugins by simply incorporating Tailwind into your setup.

h2:
  - Can FlyonUI be integrated with other UI frameworks seamlessly?

h2:
  - Introduction

h3:
  - On this page

h2:
  - Introduction

p:
  - FlyonUI is an open-sourceTailwind CSS components librarywith UI examples, blocks, templates, plugins, and a Figma design system.

h3:
  - Innovative Offerings

p:
  - Discover other Tools & Brands in our Ecosystem

p:
  - Building in public by@Ajay Patel, designed by@Anand Patel
