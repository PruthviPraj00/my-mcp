# Tailwind CSS Radio - FlyonUI

h3:
  - FlyonUI

p:
  - forms

p:
  - The radio component allows users to select one option from multiple choices. It comes in various styles, variants, and colors.

table:
| Class Name | Type | Description |
| --- | --- | --- |
| radio | Component | Component class for radio. |
| custom-option | Component | For custom option container. |
| custom-soft-option | Component | For custom option container with background. |
| label-text | Part | Base class for title label text. |
| helper-text | Part | Base class for helper label text. |
| radio-inset | Style | Targets radio input. |
| radio-primary | Color | Adds ‘primary’ color to radio. |
| radio-secondary | Color | Adds ‘secondary’ color to radio. |
| radio-accent | Color | Adds ‘accent’ color to radio. |
| radio-info | Color | Adds ‘info’ color to radio. |
| radio-success | Color | Adds ‘success’ color to radio. |
| radio-warning | Color | Adds ‘warning’ color to radio. |
| radio-error | Color | Adds ’error’ color to radio. |
| is-valid | State | Adds success style to the input. |
| is-invalid | State | Adds error style to the input. |
| radio-xs | Size | radio with extra small size. |
| radio-sm | Size | radio with small size. |
| radio-md | Size | radio with medium(default) size. |
| radio-lg | Size | radio with large size. |
| radio-xl | Size | radio with extra large size. |

h2:
  - Basic example

h3:
  - Default

p:
  - Basic radio example.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="flex items-center gap-1">
   <input class="radio" id="defaultRadio1" name="radio-0" type="radio"/>
   <label class="label-text text-base" for="defaultRadio1">
    Default
   </label>
  </div>
  <div class="flex items-center gap-1">
   <input checked="" class="radio" id="defaultRadio2" name="radio-0" type="radio"/>
   <label class="label-text text-base" for="defaultRadio2">
    Checked
   </label>
  </div>
 </div>
</div>

h3:
  - Label and helper text

p:
  - Please uselabel-textfor the label andhelper-textfor the text that appears at the bottom as helper text.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex-col flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="flex gap-3">
   <input class="radio radio-primary mt-2" id="radioDelete" name="radio-1" type="radio"/>
   <label class="label-text cursor-pointer flex flex-col" for="radioDelete">
    <span class="text-base">
     Delete
    </span>
    <span>
     Notify me when this action happens.
    </span>
   </label>
  </div>
  <div class="flex gap-3">
   <input checked="" class="radio radio-primary mt-2" id="radioArchieve" name="radio-1" type="radio"/>
   <label class="label-text cursor-pointer flex flex-col" for="radioArchieve">
    <span class="text-base">
     Archive
    </span>
    <span>
     Notify me when this action happens.
    </span>
   </label>
  </div>
 </div>
</div>

h2:
  - Types

h3:
  - Default

p:
  - Apply theradioclass to style radio buttons.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="flex items-center gap-1">
   <input class="radio radio-primary" id="radioType1" name="radio-2" type="radio"/>
   <label class="label-text text-base" for="radioType1">
    Default
   </label>
  </div>
  <div class="flex items-center gap-1">
   <input checked="" class="radio radio-primary" id="radioType2" name="radio-2" type="radio"/>
   <label class="label-text text-base" for="radioType2">
    Checked
   </label>
  </div>
 </div>
</div>

h3:
  - Inset radio

p:
  - Useradio-insetalongsideradioto create an inset radio.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="flex items-center gap-1">
   <input class="radio radio-inset radio-primary" id="radioType3" name="radio-3" type="radio"/>
   <label class="label-text text-base" for="radioType3">
    Default
   </label>
  </div>
  <div class="flex items-center gap-1">
   <input checked="" class="radio radio-inset radio-primary" id="radioType4" name="radio-3" type="radio"/>
   <label class="label-text text-base" for="radioType4">
    Checked
   </label>
  </div>
 </div>
</div>

h2:
  - Color

h3:
  - Semantic color

p:
  - Example of semantic color in default and inset radio.

p:
  - Add color to the radio button by utilizing theradio-{semantic-color}class in conjunction with theradioclass.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex-col gap-3 flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="flex items-center gap-1">
   <input checked="" class="radio" id="radioDefault1" type="radio"/>
   <label class="label-text text-base" for="radioDefault1">
    Default
   </label>
  </div>
  <div class="flex items-center gap-1">
   <input checked="" class="radio radio-primary" id="radioPrimary1" type="radio"/>
   <label class="label-text text-base" for="radioPrimary1">
    Primary
   </label>
  </div>
  <div class="flex items-center gap-1">
   <input checked="" class="radio radio-secondary" id="radioSecondary1" type="radio"/>
   <label class="label-text text-base" for="radioSecondary1">
    Secondary
   </label>
  </div>
  <div class="flex items-center gap-1">
   <input checked="" class="radio radio-accent" id="radioAccent1" type="radio"/>
   <label class="label-text text-base" for="radioAccent1">
    Accent
   </label>
  </div>
  <div class="flex items-center gap-1">
   <input checked="" class="radio radio-info" id="radioInfo1" type="radio"/>
   <label class="label-text text-base" for="radioInfo1">
    Info
   </label>
  </div>
  <div class="flex items-center gap-1">
   <input checked="" class="radio radio-success" id="radioSuccess1" type="radio"/>
   <label class="label-text text-base" for="radioSuccess1">
    Success
   </label>
  </div>
  <div class="flex items-center gap-1">
   <input checked="" class="radio radio-warning" for="radioWarning1" type="radio"/>
   <label class="label-text text-base" for="radioWarning1">
    Warning
   </label>
  </div>
  <div class="flex items-center gap-1">
   <input checked="" class="radio radio-error" for="radioError1" type="radio"/>
   <label class="label-text text-base" for="radioError1">
    Error
   </label>
  </div>
 </div>
</div>

p:
  - Use theradio-{semantic-color}class in combination with theradio-insetclass.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex-col gap-3 flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="flex items-center gap-1">
   <input checked="" class="radio radio-inset" id="radioDefault2" type="radio"/>
   <label class="label-text text-base" for="radioDefault2">
    Default
   </label>
  </div>
  <div class="flex items-center gap-1">
   <input checked="" class="radio radio-inset radio-primary" id="radioPrimary2" type="radio"/>
   <label class="label-text text-base" for="radioPrimary2">
    Primary
   </label>
  </div>
  <div class="flex items-center gap-1">
   <input checked="" class="radio radio-inset radio-secondary" id="radioSecondary2" type="radio"/>
   <label class="label-text text-base" for="radioSecondary2">
    Secondary
   </label>
  </div>
  <div class="flex items-center gap-1">
   <input checked="" class="radio radio-inset radio-accent" id="radioAccent2" type="radio"/>
   <label class="label-text text-base" for="radioAccent2">
    Accent
   </label>
  </div>
  <div class="flex items-center gap-1">
   <input checked="" class="radio radio-inset radio-info" id="radioInfo2" type="radio"/>
   <label class="label-text text-base" for="radioInfo2">
    Info
   </label>
  </div>
  <div class="flex items-center gap-1">
   <input checked="" class="radio radio-inset radio-success" id="radioSuccess2" type="radio"/>
   <label class="label-text text-base" for="radioSuccess2">
    Success
   </label>
  </div>
  <div class="flex items-center gap-1">
   <input checked="" class="radio radio-inset radio-warning" id="radioWarning2" type="radio"/>
   <label class="label-text text-base" for="radioWarning2">
    Warning
   </label>
  </div>
  <div class="flex items-center gap-1">
   <input checked="" class="radio radio-inset radio-error" id="radioError2" type="radio"/>
   <label class="label-text text-base" for="radioError2">
    Error
   </label>
  </div>
 </div>
</div>

h3:
  - Custom color

p:
  - Example of custom color in default and custom radio.

p:
  - Got it! Here’s the rephrased explanation:

p:
  - To create a custom radio button, you can usechecked:text-*, but you’ll need to apply thechecked:modifier. Alternatively, you can use--input-color, which automatically applies the color when the radio button is checked, without needing thechecked:modifier.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="flex items-center gap-1">
   <input class="radio [--input-color:pink]" id="radioCustomColor1" name="radio-4" type="radio"/>
   <label class="label-text text-base" for="radioCustomColor1">
    FlyonUI variable
   </label>
  </div>
  <div class="flex items-center gap-1">
   <input checked="" class="radio checked:text-pink-300" id="radioCustomColor2" name="radio-4" type="radio"/>
   <label class="label-text text-base" for="radioCustomColor2">
    Tailwind utility colors
   </label>
  </div>
 </div>
</div>

p:
  - Custom inset radio.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="flex items-center gap-1">
   <input class="radio radio-inset [--input-color:green]" id="radioCustomColor3" name="radio-5" type="radio"/>
   <label class="label-text text-base" for="radioCustomColor3">
    FlyonUI variable
   </label>
  </div>
  <div class="flex items-center gap-1">
   <input checked="" class="radio radio-inset checked:text-green-700" id="radioCustomColor4" name="radio-5" type="radio"/>
   <label class="label-text text-base" for="radioCustomColor4">
    Tailwind utility colors
   </label>
  </div>
 </div>
</div>

h2:
  - Sizes

h3:
  - Default radio size

p:
  - Add responsive classradio-{size}where{size} = xs|sm|md|lg|xlfor radio of different sizes.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="flex items-center">
   <input class="radio radio-xs radio-primary" id="radioExtraSmall1" name="radio-6" type="radio"/>
   <label class="label-text text-xs" for="radioExtraSmall1">
    Extra small
   </label>
  </div>
  <div class="flex items-center gap-0.5">
   <input class="radio radio-sm radio-primary" id="radioSmall1" name="radio-6" type="radio"/>
   <label class="label-text" for="radioSmall1">
    Small
   </label>
  </div>
  <div class="flex items-center gap-1">
   <input checked="" class="radio radio-primary" id="radioSizeDefault1" name="radio-6" type="radio"/>
   <label class="label-text text-base" for="radioSizeDefault1">
    Default
   </label>
  </div>
  <div class="flex items-center gap-1.5">
   <input class="radio radio-lg radio-primary" id="radioLarge1" name="radio-6" type="radio"/>
   <label class="label-text text-lg" for="radioLarge1">
    Large
   </label>
  </div>
  <div class="flex items-center gap-1.5">
   <input class="radio radio-xl radio-primary" id="radioExtraLarge1" name="radio-6" type="radio"/>
   <label class="label-text text-xl" for="radioExtraLarge1">
    Extra Large
   </label>
  </div>
 </div>
</div>

h3:
  - Inset radio size

p:
  - Add responsive classradio-{size}where{size} = xs|sm|md|lg|xlfor radio inset of different sizes.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="flex items-center">
   <input class="radio radio-inset radio-xs radio-primary" id="radioExtraSmall2" name="radio-7" type="radio"/>
   <label class="label-text text-xs" for="radioExtraSmall2">
    Extra small
   </label>
  </div>
  <div class="flex items-center gap-0.5">
   <input class="radio radio-inset radio-sm radio-primary" id="radioSmall2" name="radio-7" type="radio"/>
   <label class="label-text" for="radioSmall2">
    Small
   </label>
  </div>
  <div class="flex items-center gap-1">
   <input checked="" class="radio radio-inset radio-primary" id="radioSizeDefault2" name="radio-7" type="radio"/>
   <label class="label-text text-base" for="radioSizeDefault2">
    Default
   </label>
  </div>
  <div class="flex items-center gap-1.5">
   <input class="radio radio-inset radio-lg radio-primary" id="radioLarge" name="radio-7" type="radio"/>
   <label class="label-text text-lg" for="radioLarge">
    Large
   </label>
  </div>
  <div class="flex items-center gap-1.5">
   <input class="radio radio-inset radio-xl radio-primary" id="radioExtraLarge" name="radio-7" type="radio"/>
   <label class="label-text text-xl" for="radioExtraLarge">
    Extra Large
   </label>
  </div>
 </div>
</div>

h2:
  - Validation states

h3:
  - Success state

p:
  - Success state can be show usingis-validclass.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex-col flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="flex gap-3">
   <input checked="" class="radio radio-primary is-valid mt-2" id="radioStateSuccess1" name="radio-success" type="radio"/>
   <label class="label-text cursor-pointer flex flex-col" for="radioStateSuccess1">
    <span class="text-base">
     Delete
    </span>
    <span>
     Notify me when this action happens.
    </span>
   </label>
  </div>
  <div class="flex gap-3">
   <input checked="" class="radio radio-inset radio-primary is-valid mt-2" id="radioStateSuccess2" name="radio-success" type="radio"/>
   <label class="label-text cursor-pointer flex flex-col" for="radioStateSuccess2">
    <span class="text-base">
     Archive
    </span>
    <span>
     Notify me when this action happens.
    </span>
   </label>
  </div>
 </div>
</div>

h3:
  - Error state

p:
  - Error state can be show usingis-invalidclass.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex-col flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="flex gap-3">
   <input checked="" class="radio radio-primary is-invalid mt-2" id="radioStateError1" name="radio-error" type="radio"/>
   <label class="label-text cursor-pointer flex flex-col" for="radioStateError1">
    <span class="text-base">
     Delete
    </span>
    <span>
     Notify me when this action happens.
    </span>
   </label>
  </div>
  <div class="flex gap-3">
   <input class="radio radio-inset radio-primary is-invalid mt-2" id="radioStateError2" name="radio-error" type="radio"/>
   <label class="label-text cursor-pointer flex flex-col" for="radioStateError2">
    <span class="text-base">
     Archive
    </span>
    <span>
     Notify me when this action happens.
    </span>
   </label>
  </div>
 </div>
</div>

h2:
  - Illustrations

h3:
  - Disable

p:
  - Disable the radio component to prevent user selection by applying thedisabledattribute.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex-col flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="space-x-3">
   <input aria-label="disabled radio" checked="" class="radio" disabled="" name="radio-8" type="radio"/>
   <input aria-label="disabled radio" class="radio" disabled="" name="radio-8" type="radio"/>
  </div>
  <div class="space-x-3">
   <input aria-label="disabled radio" checked="" class="radio radio-inset" disabled="" name="radio-9" type="radio"/>
   <input aria-label="disabled radio" class="radio radio-inset" disabled="" name="radio-9" type="radio"/>
  </div>
 </div>
</div>

h3:
  - Inline radio group

p:
  - A group of radio components.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="flex gap-4 overflow-x-auto">
   <div class="flex items-center gap-2">
    <input class="radio radio-primary" id="radioInline1" name="radio-10" type="radio"/>
    <label class="label-text text-base" for="radioInline1">
     Vue
    </label>
   </div>
   <div class="flex items-center gap-2">
    <input checked="" class="radio radio-primary" id="radioInline2" name="radio-10" type="radio"/>
    <label class="label-text text-base" for="radioInline2">
     Angular
    </label>
   </div>
   <div class="flex items-center gap-2">
    <input class="radio radio-primary" id="radioInline3" name="radio-10" type="radio"/>
    <label class="label-text text-base" for="radioInline3">
     React
    </label>
   </div>
  </div>
 </div>
</div>

h3:
  - Vertical radio group

p:
  - A vertical group of radio components.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="flex flex-col gap-2">
   <div class="flex items-center gap-2">
    <input class="radio radio-primary" id="radioVertical1" name="radio-11" type="radio"/>
    <label class="label-text text-base" for="radioVertical1">
     Vue
    </label>
   </div>
   <div class="flex items-center gap-2">
    <input checked="" class="radio radio-primary" id="radioVertical2" name="radio-11" type="radio"/>
    <label class="label-text text-base" for="radioVertical2">
     Angular
    </label>
   </div>
   <div class="flex items-center gap-2">
    <input class="radio radio-primary" id="radioVertical3" name="radio-11" type="radio"/>
    <label class="label-text text-base" for="radioVertical3">
     React
    </label>
   </div>
  </div>
 </div>
</div>

h3:
  - Radio in dropdown

p:
  - Hereâs an example of a radio in dropdown that you can use right away.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="dropdown relative inline-flex [--auto-close:inside]">
   <button aria-expanded="false" aria-haspopup="menu" aria-label="Dropdown" class="dropdown-toggle btn btn-primary" id="dropdown-radio" type="button">
    Dropdown radio
    <span class="icon-[tabler--chevron-down] dropdown-open:rotate-180 size-4">
    </span>
   </button>
   <div aria-labelledby="dropdown-radio" aria-orientation="vertical" class="dropdown-menu dropdown-open:opacity-100 hidden min-w-60" role="menu">
    <div class="dropdown-item flex-col items-center gap-4 sm:flex-row sm:items-start">
     <input checked="" class="radio radio-primary mt-2" id="radioDropdown1" name="radio-12" type="radio"/>
     <label class="label-text cursor-pointer flex flex-col" for="radioDropdown1">
      <span class="font-semibold">
       Rename
      </span>
      <span class="text-base-content/50">
       Notify me when this action happens.
      </span>
     </label>
    </div>
    <div class="dropdown-item flex-col items-center gap-4 sm:flex-row sm:items-start">
     <input class="radio radio-primary mt-2" id="radioDropdown2" name="radio-12" type="radio"/>
     <label class="label-text cursor-pointer flex flex-col" for="radioDropdown2">
      <span class="font-semibold">
       Move
      </span>
      <span class="text-base-content/50">
       Notify me when this action happens.
      </span>
     </label>
    </div>
   </div>
  </div>
 </div>
</div>

h3:
  - Radio list group

p:
  - Below given example can be used to show a list of radio buttons inside a grouped list.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose !block flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <h6 class="text-base text-base-content mb-1">
   Select you favourite language:
  </h6>
  <ul class="border-base-content/25 divide-base-content/25 rounded-box max-w-sm divide-y border *:cursor-pointer">
   <li>
    <label class="flex items-center gap-3 p-3">
     <input class="radio radio-primary" name="radio-13" type="radio"/>
     <span class="label-text text-base">
      C++
     </span>
    </label>
   </li>
   <li>
    <label class="flex items-center gap-3 p-3">
     <input checked="" class="radio radio-primary" name="radio-13" type="radio"/>
     <span class="label-text text-base">
      Ruby
     </span>
    </label>
   </li>
   <li>
    <label class="flex items-center gap-3 p-3">
     <input class="radio radio-primary" name="radio-13" type="radio"/>
     <span class="label-text text-base">
      Swift
     </span>
    </label>
   </li>
  </ul>
 </div>
</div>

h3:
  - Horizontal list group

p:
  - Use below example to group up radio button components inside a list.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose !block flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <h6 class="text-base text-base-content mb-1">
   Select you favourite language:
  </h6>
  <ul class="border-base-content/25 divide-base-content/25 rounded-box flex w-full flex-col border *:w-full *:cursor-pointer max-sm:divide-y sm:flex-row sm:divide-x">
   <li>
    <label class="flex items-center gap-2 p-3">
     <input class="radio radio-primary ms-3" name="radio-14" type="radio"/>
     <span class="label-text text-base">
      Python
     </span>
    </label>
   </li>
   <li>
    <label class="flex items-center gap-2 p-3">
     <input checked="" class="radio radio-primary ms-3" name="radio-14" type="radio"/>
     <span class="label-text text-base">
      JavaScript
     </span>
    </label>
   </li>
   <li>
    <label class="flex items-center gap-2 p-3">
     <input class="radio radio-primary ms-3" name="radio-14" type="radio"/>
     <span class="label-text text-base">
      Java
     </span>
    </label>
   </li>
  </ul>
 </div>
</div>

h3:
  - Join radio with btn style

p:
  - Create a radio button group using thejoinandbtncomponent classes.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="join drop-shadow">
   <input aria-label="Radio 1" checked="" class="join-item btn btn-soft" name="radio-15" type="radio"/>
   <input aria-label="Radio 2" class="join-item btn btn-soft" name="radio-15" type="radio"/>
   <input aria-label="Radio 3" class="join-item btn btn-soft" name="radio-15" type="radio"/>
  </div>
 </div>
</div>

h2:
  - Custom options

h3:
  - Basic radio

p:
  - Utilizing thecustom-optionclass within thelabelenables the creation of custom radio buttons with improved styling and functionality.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="flex w-full items-start gap-3 flex-wrap sm:flex-nowrap">
   <label class="custom-option flex sm:w-1/2 flex-row items-start gap-3">
    <input checked="" class="radio radio-primary mt-2" name="radio-16" type="radio"/>
    <span class="label-text w-full text-start">
     <span class="flex justify-between mb-1">
      <span class="text-base">
       Basic
      </span>
      <span class="text-base-content/50 text-base">
       Free
      </span>
     </span>
     <span>
      Get 1 project with 1 teams members.
     </span>
    </span>
   </label>
   <label class="custom-option flex sm:w-1/2 flex-row items-start gap-3">
    <input class="radio radio-primary mt-2" name="radio-16" type="radio"/>
    <span class="label-text w-full text-start">
     <span class="flex justify-between mb-1">
      <span class="text-base">
       Premium
      </span>
      <span class="text-base-content/50 text-base">
       $ 5.00
      </span>
     </span>
     <span>
      Get 5 projects with 5 team members.
     </span>
    </span>
   </label>
  </div>
 </div>
</div>

h3:
  - Hidden radio button

p:
  - Utilize thehiddenTailwindCSS utility class to conceal the radio button.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="flex w-full items-start gap-3 flex-wrap sm:flex-nowrap">
   <label class="custom-option flex sm:w-1/2 flex-row items-start gap-3">
    <input checked="" class="radio hidden" name="radio-17" type="radio"/>
    <span class="label-text w-full text-start">
     <span class="flex justify-between mb-1">
      <span class="text-base">
       Basic
      </span>
      <span class="text-base-content/50 text-base">
       Free
      </span>
     </span>
     <span>
      Get 1 project with 1 teams members.
     </span>
    </span>
   </label>
   <label class="custom-option flex sm:w-1/2 flex-row items-start gap-3">
    <input class="radio hidden" name="radio-17" type="radio"/>
    <span class="label-text w-full text-start">
     <span class="flex justify-between mb-1">
      <span class="text-base">
       Premium
      </span>
      <span class="text-base-content/50 text-base">
       $ 5.00
      </span>
     </span>
     <span>
      Get 5 projects with 5 team members.
     </span>
    </span>
   </label>
  </div>
 </div>
</div>

h3:
  - Basic label radio

p:
  - Utilizing thecustom-soft-optionclass within thelabeldemonstrates this distinctive styling approach, where the label background becomes primary when checked.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="flex w-full items-start gap-3 flex-wrap sm:flex-nowrap">
   <label class="custom-soft-option flex sm:w-1/2 flex-row items-start gap-3">
    <input checked="" class="radio radio-primary mt-2" name="radio-18" type="radio"/>
    <span class="label-text w-full text-start">
     <span class="flex justify-between mb-1">
      <span class="text-base">
       Basic
      </span>
      <span class="text-base-content/50 text-base">
       Free
      </span>
     </span>
     <span>
      Get 1 project with 1 teams members.
     </span>
    </span>
   </label>
   <label class="custom-soft-option flex sm:w-1/2 flex-row items-start gap-3">
    <input class="radio radio-primary mt-2" name="radio-18" type="radio"/>
    <span class="label-text w-full text-start">
     <span class="flex justify-between mb-1">
      <span class="text-base">
       Premium
      </span>
      <span class="text-base-content/50 text-base">
       $ 5.00
      </span>
     </span>
     <span>
      Get 5 projects with 5 team members.
     </span>
    </span>
   </label>
  </div>
 </div>
</div>

h3:
  - Iconic custom radios

p:
  - Customize the styling using utility classes according to your custom preferences, as illustrated below.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="flex w-full items-start gap-3 flex-wrap sm:flex-nowrap">
   <label class="custom-option flex sm:w-1/2 flex-col items-center gap-3">
    <span class="icon-[tabler--rocket] size-10">
    </span>
    <span class="label-text p-0">
     <span class="text-base">
      Starter
     </span>
     <span>
      Cake sugar plum fruitcake I love sweet roll jelly-o
     </span>
    </span>
    <input class="radio radio-primary" name="radio-19" type="radio"/>
   </label>
   <label class="custom-option flex sm:w-1/2 flex-col items-center gap-3">
    <span class="icon-[tabler--user] size-10">
    </span>
    <span class="label-text p-0">
     <span class="text-base">
      Personal
     </span>
     <span>
      Cake sugar plum fruitcake I love sweet roll jelly-o.
     </span>
    </span>
    <input checked="" class="radio radio-primary" name="radio-19" type="radio"/>
   </label>
   <label class="custom-option flex sm:w-1/2 flex-col items-center gap-3">
    <span class="icon-[tabler--crown] size-10">
    </span>
    <span class="label-text p-0">
     <span class="text-base">
      Enterprise
     </span>
     <span>
      Cake sugar plum fruitcake I love sweet roll jelly-o.
     </span>
    </span>
    <input class="radio radio-primary" name="radio-19" type="radio"/>
   </label>
  </div>
 </div>
</div>

h3:
  - Image as radio button

p:
  - This example displays an image as a radio button.

Code:
<div :dir="isRtl ? 'rtl' : 'ltr'" class="overflow-hidden" id="previewFrame" x-ref="previewFrame">
 <div class="bg-base-200/20 border-neutral/10 rounded-box not-prose flex w-full flex-[1_0_0] flex-wrap gap-3 border p-3 sm:p-6">
  <div class="flex items-start gap-3 flex-nowrap">
   <label class="custom-option p-0">
    <span class="w-full">
     <img alt="Radio image" class="bg-contain" src="https://cdn.flyonui.com/fy-assets/components/radio/image-6.png"/>
    </span>
    <input class="radio hidden" name="radio-20" type="radio"/>
   </label>
   <label class="custom-option p-0">
    <span class="w-full">
     <img alt="Radio image" class="bg-contain" src="https://cdn.flyonui.com/fy-assets/components/radio/image-3.png"/>
    </span>
    <input checked="" class="radio hidden" name="radio-20" type="radio"/>
   </label>
   <label class="custom-option p-0">
    <span class="w-full">
     <img alt="Radio image" class="bg-contain" src="https://cdn.flyonui.com/fy-assets/components/radio/image-5.png"/>
    </span>
    <input class="radio hidden" name="radio-20" type="radio"/>
   </label>
  </div>
 </div>
</div>

h2:
  - Radio

h3:
  - On this page

h2:
  - Radio

p:
  - FlyonUI is an open-sourceTailwind CSS components librarywith UI examples, blocks, templates, plugins, and a Figma design system.

h3:
  - Innovative Offerings

p:
  - Discover other Tools & Brands in our Ecosystem

p:
  - Building in public by@Ajay Patel, designed by@Anand Patel
